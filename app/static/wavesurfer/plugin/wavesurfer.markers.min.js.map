{"version":3,"file":"wavesurfer.markers.min.js","mappings":"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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/markers/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"markers\"] = factory();\n})(self, () => {\nreturn ","/**\n * @typedef {Object} MarkerParams\n * @desc The parameters used to describe a marker.\n * @example wavesurfer.addMarker(regionParams);\n * @property {number} time The time to set the marker at\n * @property {?label} string An optional marker label\n * @property {?tooltip} string An optional marker tooltip\n * @property {?color} string Background color for marker\n * @property {?position} string \"top\" or \"bottom\", defaults to \"bottom\"\n * @property {?markerElement} element An HTML element to display instead of the default marker image\n * @property {?draggable} boolean Set marker as draggable, defaults to false\n * @property {?boolean} preventContextMenu Determines whether the context menu\n * is prevented from being opened, defaults to false\n */\n\n\n/**\n * Markers are points in time in the audio that can be jumped to.\n *\n * @implements {PluginClass}\n *\n * @example\n * import MarkersPlugin from 'wavesurfer.markers.js';\n *\n * // if you are using <script> tags\n * var MarkerPlugin = window.WaveSurfer.markers;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MarkersPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\n\nconst DEFAULT_FILL_COLOR = \"#D8D8D8\";\nconst DEFAULT_POSITION = \"bottom\";\n\nexport default class MarkersPlugin {\n    /**\n     * @typedef {Object} MarkersPluginParams\n     * @property {?MarkerParams[]} markers Initial set of markers\n     * @fires MarkersPlugin#marker-click\n     * @fires MarkersPlugin#marker-drag\n     * @fires MarkersPlugin#marker-drop\n     */\n\n    /**\n     * Markers plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {MarkersPluginParams} params parameters use to initialise the plugin\n     * @since 4.6.0\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'markers',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addMarker(options) {\n                    if (!this.initialisedPluginList.markers) {\n                        this.initPlugin('markers');\n                    }\n                    return this.markers.add(options);\n                },\n                clearMarkers() {\n                    this.markers && this.markers.clear();\n                }\n            },\n            instance: MarkersPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.markerLineWidth = 1;\n        this.markerWidth = 11;\n        this.markerHeight = 22;\n        this.dragging = false;\n\n\n        this._onResize = () => {\n            this._updateMarkerPositions();\n        };\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.markers) {\n                this.params.markers.forEach(marker => this.add(marker));\n            }\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n            this.wavesurfer.on('zoom', this._onResize);\n\n            if (!this.markers.find(marker => marker.draggable)){\n                return;\n            }\n\n            this.onMouseMove = (e) => this._onMouseMove(e);\n            window.addEventListener('mousemove', this.onMouseMove);\n\n            this.onMouseUp = (e) => this._onMouseUp(e);\n            window.addEventListener(\"mouseup\", this.onMouseUp);\n        };\n\n        this.markers = [];\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this._updateMarkerPositions();\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n\n        this.wavesurfer.un('zoom', this._onResize);\n\n        window.removeEventListener('resize', this._onResize, true);\n        window.removeEventListener('orientationchange', this._onResize, true);\n\n        if (this.onMouseMove) {\n            window.removeEventListener('mousemove', this.onMouseMove);\n        }\n        if (this.onMouseUp) {\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\n        }\n\n        this.clear();\n    }\n\n    /**\n     * Add a marker\n     *\n     * @param {MarkerParams} params Marker definition\n     * @return {object} The created marker\n     */\n    add(params) {\n        let marker = {\n            time: params.time,\n            label: params.label,\n            tooltip: params.tooltip,\n            color: params.color || DEFAULT_FILL_COLOR,\n            position: params.position || DEFAULT_POSITION,\n            draggable: !!params.draggable,\n            preventContextMenu: !!params.preventContextMenu\n        };\n\n        marker.el = this._createMarkerElement(marker, params.markerElement);\n\n        this.wrapper.appendChild(marker.el);\n        this.markers.push(marker);\n        this._updateMarkerPositions();\n\n        this._registerEvents();\n\n        return marker;\n    }\n\n    /**\n     * Remove a marker\n     *\n     * @param {number} index Index of the marker to remove\n     */\n    remove(index) {\n        let marker = this.markers[index];\n        if (!marker) {\n            return;\n        }\n        let label = marker.el.getElementsByClassName(\"marker-label\")[0];\n        if (label) {\n            if (label._onContextMenu) {\n                label.removeEventListener(\"contextmenu\", label._onContextMenu);\n            }\n            if (label._onClick) {\n                label.removeEventListener(\"click\", label._onClick);\n            }\n            if (label._onMouseDown) {\n                label.removeEventListener(\"mousedown\", label._onMouseDown);\n            }\n        }\n\n        this.wrapper.removeChild(marker.el);\n        this.markers.splice(index, 1);\n\n        this._unregisterEvents();\n    }\n\n    _createPointerSVG(color, position) {\n        const svgNS = \"http://www.w3.org/2000/svg\";\n\n        const el = document.createElementNS(svgNS, \"svg\");\n        const polygon = document.createElementNS(svgNS, \"polygon\");\n\n        el.setAttribute(\"viewBox\", \"0 0 40 80\");\n\n        polygon.setAttribute(\"id\", \"polygon\");\n        polygon.setAttribute(\"stroke\", \"#979797\");\n        polygon.setAttribute(\"fill\", color);\n        polygon.setAttribute(\"points\", \"20 0 40 30 40 80 0 80 0 30\");\n        if ( position == \"top\" ) {\n            polygon.setAttribute(\"transform\", \"rotate(180, 20 40)\");\n        }\n\n        el.appendChild(polygon);\n\n        this.style(el, {\n            width: this.markerWidth + \"px\",\n            height: this.markerHeight + \"px\",\n            \"min-width\": this.markerWidth + \"px\",\n            \"margin-right\": \"5px\",\n            \"z-index\": 4\n        });\n        return el;\n    }\n\n    _createMarkerElement(marker, markerElement) {\n        let label = marker.label;\n        let tooltip = marker.tooltip;\n\n        const el = document.createElement('marker');\n        el.className = \"wavesurfer-marker\";\n\n        this.style(el, {\n            position: \"absolute\",\n            height: \"100%\",\n            display: \"flex\",\n            overflow: \"hidden\",\n            \"flex-direction\": (marker.position == \"top\" ? \"column-reverse\" : \"column\")\n        });\n\n        const line = document.createElement('div');\n        const width = markerElement ? markerElement.width : this.markerWidth;\n        marker.offset = (width - this.markerLineWidth) / 2;\n        this.style(line, {\n            \"flex-grow\": 1,\n            \"margin-left\": marker.offset + \"px\",\n            background: \"black\",\n            width: this.markerLineWidth + \"px\",\n            opacity: 0.1\n        });\n        el.appendChild(line);\n\n        const labelDiv = document.createElement('div');\n        const point = markerElement || this._createPointerSVG(marker.color, marker.position);\n        if (marker.draggable){\n            point.draggable = false;\n        }\n        labelDiv.appendChild(point);\n\n        if ( label ) {\n            const labelEl = document.createElement('span');\n            labelEl.innerText = label;\n            labelEl.setAttribute('title', tooltip);\n            this.style(labelEl, {\n                \"font-family\": \"monospace\",\n                \"font-size\": \"90%\"\n            });\n            labelDiv.appendChild(labelEl);\n        }\n\n        this.style(labelDiv, {\n            display: \"flex\",\n            \"align-items\": \"center\",\n            cursor: \"pointer\"\n        });\n        labelDiv.classList.add(\"marker-label\");\n\n        el.appendChild(labelDiv);\n\n        labelDiv._onClick = (e) => {\n            e.stopPropagation();\n            // Click event is caught when the marker-drop event was dispatched.\n            // Drop event was dispatched at this moment, but this.dragging\n            // is waiting for the next tick to set as false\n            if (this.dragging){\n                return;\n            }\n            this.wavesurfer.setCurrentTime(marker.time);\n            this.wavesurfer.fireEvent(\"marker-click\", marker, e);\n        };\n        labelDiv.addEventListener(\"click\", labelDiv._onClick);\n\n        labelDiv._onContextMenu = (e) => {\n            if (marker.preventContextMenu) {\n                e.preventDefault();\n            }\n            this.wavesurfer.fireEvent(\"marker-contextmenu\", marker, e);\n        };\n        labelDiv.addEventListener(\"contextmenu\", labelDiv._onContextMenu);\n\n        if (marker.draggable) {\n            labelDiv._onMouseDown = () => {\n                this.selectedMarker = marker;\n            };\n            labelDiv.addEventListener(\"mousedown\", labelDiv._onMouseDown);\n        }\n        return el;\n    }\n\n    _updateMarkerPositions() {\n        for ( let i = 0 ; i < this.markers.length; i++ ) {\n            let marker = this.markers[i];\n            this._updateMarkerPosition(marker);\n        }\n    }\n\n    /**\n     * Update a marker position based on its time property.\n     *\n     * @private\n     * @param {MarkerParams} params The marker to update.\n     * @returns {void}\n     */\n    _updateMarkerPosition(params) {\n        const duration = this.wavesurfer.getDuration();\n        const elementWidth =\n            this.wavesurfer.drawer.width /\n            this.wavesurfer.params.pixelRatio;\n\n        const positionPct = Math.min(params.time / duration, 1);\n        const leftPx = ((elementWidth * positionPct) - params.offset);\n        this.style(params.el, {\n            \"left\": leftPx + \"px\",\n            \"max-width\": (elementWidth - leftPx) + \"px\"\n        });\n    }\n\n    /**\n     * Fires `marker-drag` event, update the `time` property for the\n     * selected marker based on the mouse position, and calls to update\n     * its position.\n     *\n     * @private\n     * @param {MouseEvent} event The mouse event.\n     * @returns {void}\n     */\n    _onMouseMove(event) {\n        if (!this.selectedMarker){\n            return;\n        }\n        if (!this.dragging){\n            this.dragging = true;\n            this.wavesurfer.fireEvent(\"marker-drag\", this.selectedMarker, event);\n        }\n        this.selectedMarker.time = this.wavesurfer.drawer.handleEvent(event) * this.wavesurfer.getDuration();\n        this._updateMarkerPositions();\n    }\n\n    /**\n     * Fires `marker-drop` event and unselect the dragged marker.\n     *\n     * @private\n     * @param {MouseEvent} event The mouse event.\n     * @returns {void}\n     */\n    _onMouseUp(event) {\n        if (this.selectedMarker) {\n            setTimeout(() => {\n                this.selectedMarker = false;\n                this.dragging = false;\n            }, 0);\n        }\n\n        if (!this.dragging) {\n            return;\n        }\n\n        event.stopPropagation();\n        const duration = this.wavesurfer.getDuration();\n        this.selectedMarker.time = this.wavesurfer.drawer.handleEvent(event) * duration;\n        this._updateMarkerPositions();\n        this.wavesurfer.fireEvent(\"marker-drop\", this.selectedMarker, event);\n    }\n\n    _registerEvents() {\n        if (!this.markers.find(marker => marker.draggable)) {\n            return;\n        }\n        //we have some draggable markers, check for listeners\n        if (!this.onMouseMove) {\n            this.onMouseMove = (e) => this._onMouseMove(e);\n            window.addEventListener('mousemove', this.onMouseMove);\n        }\n\n        if (!this.onMouseUp) {\n            this.onMouseUp = (e) => this._onMouseUp(e);\n            window.addEventListener(\"mouseup\", this.onMouseUp);\n        }\n    }\n\n    _unregisterEvents() {\n        if (this.markers.find(marker => marker.draggable)) {\n            return;\n        }\n        //we don't have any draggable markers, unregister listeners\n        if (this.onMouseMove) {\n            window.removeEventListener('mousemove', this.onMouseMove);\n            this.onMouseMove = null;\n        }\n        if (this.onMouseUp) {\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\n            this.onMouseUp = null;\n        }\n    }\n\n    /**\n     * Remove all markers\n     */\n    clear() {\n        while ( this.markers.length > 0 ) {\n            this.remove(0);\n        }\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(188);\n"],"names":["root","factory","exports","module","define","amd","self","MarkersPlugin","params","ws","this","wavesurfer","util","style","markerLineWidth","markerWidth","markerHeight","dragging","_onResize","_updateMarkerPositions","_onBackendCreated","wrapper","drawer","markers","forEach","marker","add","window","addEventListener","on","find","draggable","onMouseMove","e","_onMouseMove","onMouseUp","_onMouseUp","_onReady","name","deferInit","staticProps","addMarker","options","initialisedPluginList","initPlugin","clearMarkers","clear","instance","isReady","once","un","removeEventListener","time","label","tooltip","color","position","preventContextMenu","el","_createMarkerElement","markerElement","appendChild","push","_registerEvents","index","getElementsByClassName","_onContextMenu","_onClick","_onMouseDown","removeChild","splice","_unregisterEvents","svgNS","document","createElementNS","polygon","setAttribute","width","height","createElement","className","display","overflow","line","offset","background","opacity","labelDiv","point","_createPointerSVG","labelEl","innerText","cursor","classList","stopPropagation","setCurrentTime","fireEvent","preventDefault","selectedMarker","i","length","_updateMarkerPosition","duration","getDuration","elementWidth","pixelRatio","leftPx","Math","min","event","handleEvent","setTimeout","remove","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}