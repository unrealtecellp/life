{"version":3,"file":"wavesurfer.mediasession.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA,IAyBqBA,kBAAkB;EAmBnC,4BAAYC,MAAM,EAAEC,EAAE,EAAE;IAAA;IAAA;IACpB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,UAAU,GAAGD,EAAE;IAEpB,IAAI,cAAc,IAAIE,SAAS,EAAE;MAC7B;MACA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,MAAM,CAACI,QAAQ;MACpC,IAAI,CAACC,MAAM,EAAE;;MAEb;MACA,IAAI,CAACH,UAAU,CAACI,EAAE,CAAC,MAAM,EAAE,YAAM;QAC7B,KAAI,CAACD,MAAM,EAAE;MACjB,CAAC,CAAC;;MAEF;MACAF,SAAS,CAACI,YAAY,CAACC,gBAAgB,CAAC,MAAM,EAAE,YAAM;QAClD,KAAI,CAACN,UAAU,CAACO,IAAI,EAAE;MAC1B,CAAC,CAAC;MACFN,SAAS,CAACI,YAAY,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAM;QACnD,KAAI,CAACN,UAAU,CAACQ,SAAS,EAAE;MAC/B,CAAC,CAAC;MACFP,SAAS,CAACI,YAAY,CAACC,gBAAgB,CAAC,cAAc,EAAE,YAAM;QAC1D,KAAI,CAACN,UAAU,CAACS,YAAY,EAAE;MAClC,CAAC,CAAC;MACFR,SAAS,CAACI,YAAY,CAACC,gBAAgB,CAAC,aAAa,EAAE,YAAM;QACzD,KAAI,CAACN,UAAU,CAACU,WAAW,EAAE;MACjC,CAAC,CAAC;IACN;EACJ;EAAC;IAAA;IAAA,OAED,gBAAO,CAAC;EAAC;IAAA;IAAA,OAET,mBAAU,CAAC;EAAC;IAAA;IAAA,OAEZ,kBAAS;MACL,IAAI,QAAOC,aAAa,yCAAbA,aAAa,eAAYC,QAAQ,yCAARA,QAAQ,IAAE;QAC1C;QACAX,SAAS,CAACI,YAAY,CAACH,QAAQ,GAAG,IAAIS,aAAa,CAAC,IAAI,CAACT,QAAQ,CAAC;MACtE;IACJ;EAAC;IAAA;IAAA;IAzDD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,gBAAcJ,MAAM,EAAE;MAClB,OAAO;QACHe,IAAI,EAAE,cAAc;QACpBC,SAAS,EAAEhB,MAAM,IAAIA,MAAM,CAACgB,SAAS,GAAGhB,MAAM,CAACgB,SAAS,GAAG,KAAK;QAChEhB,MAAM,EAAEA,MAAM;QACdiB,QAAQ,EAAElB;MACd,CAAC;IACL;EAAC;EAAA;AAAA;AAAA;AAAA;;;;;;UCnDL;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/mediasession/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"mediasession\"] = factory();\n})(self, () => {\nreturn ","/**\n * @typedef {Object} MediaSessionPluginParams\n * @property {MediaMetadata} metadata A MediaMetadata object: a representation\n * of the metadata associated with a MediaSession that can be used by user agents\n * to provide a customized user interface.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('mediasession')`\n */\n\n/**\n * Visualize MediaSession information for a wavesurfer instance.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import MediaSessionPlugin from 'wavesurfer.mediasession.js';\n *\n * // commonjs\n * var MediaSessionPlugin = require('wavesurfer.mediasession.js');\n *\n * // if you are using <script> tags\n * var MediaSessionPlugin = window.WaveSurfer.mediasession;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MediaSessionPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class MediaSessionPlugin {\n    /**\n     * MediaSession plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {MediaSessionPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'mediasession',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: MediaSessionPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n\n        if ('mediaSession' in navigator) {\n            // update metadata\n            this.metadata = this.params.metadata;\n            this.update();\n\n            // update metadata when playback starts\n            this.wavesurfer.on('play', () => {\n                this.update();\n            });\n\n            // set playback action handlers\n            navigator.mediaSession.setActionHandler('play', () => {\n                this.wavesurfer.play();\n            });\n            navigator.mediaSession.setActionHandler('pause', () => {\n                this.wavesurfer.playPause();\n            });\n            navigator.mediaSession.setActionHandler('seekbackward', () => {\n                this.wavesurfer.skipBackward();\n            });\n            navigator.mediaSession.setActionHandler('seekforward', () => {\n                this.wavesurfer.skipForward();\n            });\n        }\n    }\n\n    init() {}\n\n    destroy() {}\n\n    update() {\n        if (typeof MediaMetadata === typeof Function) {\n            // set metadata\n            navigator.mediaSession.metadata = new MediaMetadata(this.metadata);\n        }\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/mediasession/index.js\");\n",""],"names":["MediaSessionPlugin","params","ws","wavesurfer","navigator","metadata","update","on","mediaSession","setActionHandler","play","playPause","skipBackward","skipForward","MediaMetadata","Function","name","deferInit","instance"],"sourceRoot":""}