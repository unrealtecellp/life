{"version":3,"file":"wavesurfer.microphone.js","mappings":"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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/microphone/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"microphone\"] = factory();\n})(self, () => {\nreturn ","/**\n * @typedef {Object} MicrophonePluginParams\n * @property {MediaStreamConstraints} constraints The constraints parameter is a\n * MediaStreamConstaints object with two members: video and audio, describing\n * the media types requested. Either or both must be specified.\n * @property {number} bufferSize=4096 The buffer size in units of sample-frames.\n * If specified, the bufferSize must be one of the following values: `256`,\n * `512`, `1024`, `2048`, `4096`, `8192`, `16384`\n * @property {number} numberOfInputChannels=1 Integer specifying the number of\n * channels for this node's input. Values of up to 32 are supported.\n * @property {number} numberOfOutputChannels=1 Integer specifying the number of\n * channels for this node's output.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('microphone')`\n */\n\n/**\n * Visualize microphone input in a wavesurfer instance.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import MicrophonePlugin from 'wavesurfer.microphone.js';\n *\n * // commonjs\n * var MicrophonePlugin = require('wavesurfer.microphone.js');\n *\n * // if you are using <script> tags\n * var MicrophonePlugin = window.WaveSurfer.microphone;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MicrophonePlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class MicrophonePlugin {\n    /**\n     * Microphone plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {MicrophonePluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'microphone',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: MicrophonePlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n\n        this.active = false;\n        this.paused = false;\n        this.browser = this.detectBrowser();\n        this.reloadBufferFunction = e => this.reloadBuffer(e);\n\n        // cross-browser getUserMedia\n        const promisifiedOldGUM = (\n            constraints,\n            successCallback,\n            errorCallback\n        ) => {\n            // get a hold of getUserMedia, if present\n            const getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia;\n            // Some browsers just don't implement it - return a rejected\n            // promise with an error to keep a consistent interface\n            if (!getUserMedia) {\n                return Promise.reject(\n                    new Error('getUserMedia is not implemented in this browser')\n                );\n            }\n            // otherwise, wrap the call to the old navigator.getUserMedia with\n            // a Promise\n            return new Promise((successCallback, errorCallback) => {\n                getUserMedia.call(\n                    navigator,\n                    constraints,\n                    successCallback,\n                    errorCallback\n                );\n            });\n        };\n        // Older browsers might not implement mediaDevices at all, so we set an\n        // empty object first\n        if (navigator.mediaDevices === undefined) {\n            navigator.mediaDevices = {};\n        }\n        // Some browsers partially implement mediaDevices. We can't just assign\n        // an object with getUserMedia as it would overwrite existing\n        // properties. Here, we will just add the getUserMedia property if it's\n        // missing.\n        if (navigator.mediaDevices.getUserMedia === undefined) {\n            navigator.mediaDevices.getUserMedia = promisifiedOldGUM;\n        }\n        this.constraints = this.params.constraints || {\n            video: false,\n            audio: true\n        };\n        this.bufferSize = this.params.bufferSize || 4096;\n        this.numberOfInputChannels = this.params.numberOfInputChannels || 1;\n        this.numberOfOutputChannels = this.params.numberOfOutputChannels || 1;\n\n        this._onBackendCreated = () => {\n            // wavesurfer's AudioContext where we'll route the mic signal to\n            this.micContext = this.wavesurfer.backend.getAudioContext();\n        };\n    }\n\n    init() {\n        this.wavesurfer.on('backend-created', this._onBackendCreated);\n        if (this.wavesurfer.backend) {\n            this._onBackendCreated();\n        }\n    }\n\n    /**\n     * Destroy the microphone plugin.\n     */\n    destroy() {\n        // make sure the buffer is not redrawn during\n        // cleanup and demolition of this plugin.\n        this.paused = true;\n\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.stop();\n    }\n\n    /**\n     * Allow user to select audio input device, e.g. microphone, and\n     * start the visualization.\n     */\n    start() {\n        navigator.mediaDevices\n            .getUserMedia(this.constraints)\n            .then(data => this.gotStream(data))\n            .catch(data => this.deviceError(data));\n    }\n\n    /**\n     * Pause/resume visualization.\n     */\n    togglePlay() {\n        if (!this.active) {\n            // start it first\n            this.start();\n        } else {\n            // toggle paused\n            this.paused = !this.paused;\n\n            if (this.paused) {\n                this.pause();\n            } else {\n                this.play();\n            }\n        }\n    }\n\n    /**\n     * Play visualization.\n     */\n    play() {\n        this.paused = false;\n\n        this.connect();\n    }\n\n    /**\n     * Pause visualization.\n     */\n    pause() {\n        this.paused = true;\n\n        // disconnect sources so they can be used elsewhere\n        // (eg. during audio playback)\n        this.disconnect();\n    }\n\n    /**\n     * Stop the device stream and remove any remaining waveform drawing from\n     * the wavesurfer canvas.\n     */\n    stop() {\n        if (this.active) {\n            // stop visualization and device\n            this.stopDevice();\n\n            // empty last frame\n            this.wavesurfer.empty();\n        }\n    }\n\n    /**\n     * Stop the device and the visualization.\n     */\n    stopDevice() {\n        this.active = false;\n\n        // stop visualization\n        this.disconnect();\n\n        // stop stream from device\n        if (this.stream && this.stream.getTracks) {\n            this.stream.getTracks().forEach(stream => stream.stop());\n        }\n    }\n\n    /**\n     * Connect the media sources that feed the visualization.\n     */\n    connect() {\n        if (this.stream !== undefined) {\n            // Create a local buffer for data to be copied to the Wavesurfer buffer for Edge\n            if (this.browser.browser === 'edge') {\n                this.localAudioBuffer = this.micContext.createBuffer(\n                    this.numberOfInputChannels,\n                    this.bufferSize,\n                    this.micContext.sampleRate\n                );\n            }\n\n            // Create an AudioNode from the stream.\n            this.mediaStreamSource = this.micContext.createMediaStreamSource(\n                this.stream\n            );\n\n            this.levelChecker = this.micContext.createScriptProcessor(\n                this.bufferSize,\n                this.numberOfInputChannels,\n                this.numberOfOutputChannels\n            );\n            this.mediaStreamSource.connect(this.levelChecker);\n\n            this.levelChecker.connect(this.micContext.destination);\n            this.levelChecker.onaudioprocess = this.reloadBufferFunction;\n        }\n    }\n\n    /**\n     * Disconnect the media sources that feed the visualization.\n     */\n    disconnect() {\n        if (this.mediaStreamSource !== undefined) {\n            this.mediaStreamSource.disconnect();\n        }\n\n        if (this.levelChecker !== undefined) {\n            this.levelChecker.disconnect();\n            this.levelChecker.onaudioprocess = undefined;\n        }\n\n        if (this.localAudioBuffer !== undefined) {\n            this.localAudioBuffer = undefined;\n        }\n    }\n\n    /**\n     * Redraw the waveform.\n     *\n     * @param {object} event Audioprocess event\n     */\n    reloadBuffer(event) {\n        if (!this.paused) {\n            this.wavesurfer.empty();\n\n            if (this.browser.browser === 'edge') {\n                // copy audio data to a local audio buffer,\n                // from https://github.com/audiojs/audio-buffer-utils\n                let channel, l;\n                for (\n                    channel = 0,\n                    l = Math.min(\n                        this.localAudioBuffer.numberOfChannels,\n                        event.inputBuffer.numberOfChannels\n                    );\n                    channel < l;\n                    channel++\n                ) {\n                    this.localAudioBuffer\n                        .getChannelData(channel)\n                        .set(event.inputBuffer.getChannelData(channel));\n                }\n\n                this.wavesurfer.loadDecodedBuffer(this.localAudioBuffer);\n            } else {\n                this.wavesurfer.loadDecodedBuffer(event.inputBuffer);\n            }\n        }\n    }\n\n    /**\n     * Audio input device is ready.\n     *\n     * @param {MediaStream} stream The microphone's media stream.\n     */\n    gotStream(stream) {\n        this.stream = stream;\n        this.active = true;\n\n        // start visualization\n        this.play();\n\n        // notify listeners\n        this.fireEvent('deviceReady', stream);\n    }\n\n    /**\n     * Device error callback.\n     *\n     * @param {string} code Error message\n     */\n    deviceError(code) {\n        // notify listeners\n        this.fireEvent('deviceError', code);\n    }\n\n    /**\n     * Extract browser version out of the provided user agent string.\n     * @param {!string} uastring userAgent string.\n     * @param {!string} expr Regular expression used as match criteria.\n     * @param {!number} pos position in the version string to be returned.\n     * @return {!number} browser version.\n     */\n    extractVersion(uastring, expr, pos) {\n        const match = uastring.match(expr);\n        return match && match.length >= pos && parseInt(match[pos], 10);\n    }\n\n    /**\n     * Browser detector.\n     * @return {object} result containing browser, version and minVersion\n     *     properties.\n     */\n    detectBrowser() {\n        // Returned result object.\n        const result = {};\n        result.browser = null;\n        result.version = null;\n        result.minVersion = null;\n\n        // Non supported browser.\n        if (typeof window === 'undefined' || !window.navigator) {\n            result.browser = 'Not a supported browser.';\n            return result;\n        }\n\n        if (navigator.mozGetUserMedia) {\n            // Firefox\n            result.browser = 'firefox';\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /Firefox\\/(\\d+)\\./,\n                1\n            );\n            result.minVersion = 31;\n            return result;\n        } else if (navigator.webkitGetUserMedia) {\n            // Chrome/Chromium/Webview/Opera\n            result.browser = 'chrome';\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /Chrom(e|ium)\\/(\\d+)\\./,\n                2\n            );\n            result.minVersion = 38;\n            return result;\n        } else if (\n            navigator.mediaDevices &&\n            navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)\n        ) {\n            // Edge\n            result.browser = 'edge';\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /Edge\\/(\\d+).(\\d+)$/,\n                2\n            );\n            result.minVersion = 10547;\n            return result;\n        } else if (\n            window.RTCPeerConnection &&\n            navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)\n        ) {\n            // Safari\n            result.browser = 'safari';\n            result.minVersion = 11;\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /AppleWebKit\\/(\\d+)\\./,\n                1\n            );\n            return result;\n        }\n\n        // Non supported browser default.\n        result.browser = 'Not a supported browser.';\n        return result;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/microphone/index.js\");\n",""],"names":["MicrophonePlugin","params","ws","wavesurfer","active","paused","browser","detectBrowser","reloadBufferFunction","e","reloadBuffer","promisifiedOldGUM","constraints","successCallback","errorCallback","getUserMedia","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","reject","Error","call","mediaDevices","undefined","video","audio","bufferSize","numberOfInputChannels","numberOfOutputChannels","_onBackendCreated","micContext","backend","getAudioContext","on","un","stop","then","data","gotStream","catch","deviceError","start","pause","play","connect","disconnect","stopDevice","empty","stream","getTracks","forEach","localAudioBuffer","createBuffer","sampleRate","mediaStreamSource","createMediaStreamSource","levelChecker","createScriptProcessor","destination","onaudioprocess","event","channel","l","Math","min","numberOfChannels","inputBuffer","getChannelData","set","loadDecodedBuffer","fireEvent","code","uastring","expr","pos","match","length","parseInt","result","version","minVersion","window","extractVersion","userAgent","RTCPeerConnection","name","deferInit","instance"],"sourceRoot":""}