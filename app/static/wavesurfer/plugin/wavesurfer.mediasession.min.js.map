{"version":3,"file":"wavesurfer.mediasession.min.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,aAAc,GAAIH,GACC,iBAAZC,QACdA,QAAoB,WAAID,KAExBD,EAAiB,WAAIA,EAAiB,YAAK,CAAC,EAAGA,EAAiB,WAAgB,aAAIC,IACrF,CATD,CASGK,MAAM,IACT,M,8eCDA,IAyBqBC,EAAkB,WAmBnC,WAAYC,EAAQC,GAAI,Y,4FAAA,SACpBC,KAAKF,OAASA,EACdE,KAAKC,WAAaF,EAEd,iBAAkBG,YAElBF,KAAKG,SAAWH,KAAKF,OAAOK,SAC5BH,KAAKI,SAGLJ,KAAKC,WAAWI,GAAG,QAAQ,WACvB,EAAKD,QACT,IAGAF,UAAUI,aAAaC,iBAAiB,QAAQ,WAC5C,EAAKN,WAAWO,MACpB,IACAN,UAAUI,aAAaC,iBAAiB,SAAS,WAC7C,EAAKN,WAAWQ,WACpB,IACAP,UAAUI,aAAaC,iBAAiB,gBAAgB,WACpD,EAAKN,WAAWS,cACpB,IACAR,UAAUI,aAAaC,iBAAiB,eAAe,WACnD,EAAKN,WAAWU,aACpB,IAER,C,UA9BC,O,EA8BA,E,EAWA,qBAhDD,SAAcb,GACV,MAAO,CACHc,KAAM,eACNC,aAAWf,IAAUA,EAAOe,YAAYf,EAAOe,UAC/Cf,OAAQA,EACRgB,SAAUjB,EAElB,K,EA8BC,mBAED,WAAQ,GAAC,qBAET,WAAW,GAAC,oBAEZ,YACiC,oBAAlBkB,cAAa,cAAbA,mBAAiC,oBAARC,SAAQ,cAARA,aAEhCd,UAAUI,aAAaH,SAAW,IAAIY,cAAcf,KAAKG,UAEjE,M,8EAzCC,EAjBkC,GAiBlC,+B,GClDDc,EAA2B,CAAC,ECEhC,IAAIC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa7B,QAGrB,IAAIC,EAASwB,EAAyBG,GAAY,CAGjD5B,QAAS,CAAC,GAOX,OAHA+B,EAAoBH,GAAU3B,EAAQA,EAAOD,QAAS2B,GAG/C1B,EAAOD,OACf,CCnB0B2B,CAAoB,K,UHO9C","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/mediasession/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"mediasession\"] = factory();\n})(self, () => {\nreturn ","/**\n * @typedef {Object} MediaSessionPluginParams\n * @property {MediaMetadata} metadata A MediaMetadata object: a representation\n * of the metadata associated with a MediaSession that can be used by user agents\n * to provide a customized user interface.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('mediasession')`\n */\n\n/**\n * Visualize MediaSession information for a wavesurfer instance.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import MediaSessionPlugin from 'wavesurfer.mediasession.js';\n *\n * // commonjs\n * var MediaSessionPlugin = require('wavesurfer.mediasession.js');\n *\n * // if you are using <script> tags\n * var MediaSessionPlugin = window.WaveSurfer.mediasession;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MediaSessionPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class MediaSessionPlugin {\n    /**\n     * MediaSession plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {MediaSessionPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'mediasession',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: MediaSessionPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n\n        if ('mediaSession' in navigator) {\n            // update metadata\n            this.metadata = this.params.metadata;\n            this.update();\n\n            // update metadata when playback starts\n            this.wavesurfer.on('play', () => {\n                this.update();\n            });\n\n            // set playback action handlers\n            navigator.mediaSession.setActionHandler('play', () => {\n                this.wavesurfer.play();\n            });\n            navigator.mediaSession.setActionHandler('pause', () => {\n                this.wavesurfer.playPause();\n            });\n            navigator.mediaSession.setActionHandler('seekbackward', () => {\n                this.wavesurfer.skipBackward();\n            });\n            navigator.mediaSession.setActionHandler('seekforward', () => {\n                this.wavesurfer.skipForward();\n            });\n        }\n    }\n\n    init() {}\n\n    destroy() {}\n\n    update() {\n        if (typeof MediaMetadata === typeof Function) {\n            // set metadata\n            navigator.mediaSession.metadata = new MediaMetadata(this.metadata);\n        }\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(511);\n"],"names":["root","factory","exports","module","define","amd","self","MediaSessionPlugin","params","ws","this","wavesurfer","navigator","metadata","update","on","mediaSession","setActionHandler","play","playPause","skipBackward","skipForward","name","deferInit","instance","MediaMetadata","Function","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}